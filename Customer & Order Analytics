--Here are the SQL queries that utilizes a database with multiple tables to get statitics about customer and order data:

--How many orders were placed in January?
SELECT count(orderid) 
  FROM BIT_DB.JanSales
 WHERE length(orderid) = 6 AND 
       orderid <> 'Order ID';
       
 --How many of those orders were for an iPhone?      
SELECT count(orderid) 
  FROM BIT_DB.JanSales
 WHERE Product = 'iPhone' AND 
       length(orderid) = 6 AND 
       orderid <> 'Order ID';
   
-- Select the customer account numbers for all the orders that were placed in February.
SELECT DISTINCT acctnum
  FROM BIT_DB.customers customers
       INNER JOIN
       BIT_DB.FebSales Feburary ON customers.order_id = Feburary.orderid
 WHERE length(orderid) = 6 AND 
       orderid <> 'Order ID';

-- Which product was the cheapest one sold in January, and what was the price?
SELECT DISTINCT product,
                min(price) 
  FROM BIT_DB.JanSales
 WHERE price IN (
           SELECT min(price) 
             FROM BIT_DB.JanSales
       );
       
--What is the total revenue for each product sold in January?     
SELECT SUM(quantity) * price AS Revenue,
       product
  FROM BIT_DB.JanSales
 GROUP BY product;
 
--Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT product,
       quanitity,
       sum(quantity) * price AS revenue
  FROM BIT_DB.FebSales
 WHERE location = '548 Lincoln St, Seattle, WA 98101'
 GROUP BY product;
 
--How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT count(DISTINCT customers.acctnum),
       avg(quantity * price) 
  FROM BIT_DB.FebSales Februray
       LEFT JOIN
       BIT_DB.customers customers ON Februray.orderid = customers.order_id
 WHERE Februray.Quantity > 2 AND 
       length(orderid) = 6 AND 
       orderid <> 'Order ID';

--List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT Product,
       SUM(quantity) 
  FROM BIT_DB.FebSales
 WHERE location LIKE '%Los Angeles%'
 GROUP BY Product;

--Which locations in New York received at least 3 orders in January, and how many orders did they each receive? (Hint: use HAVING).

SELECT DISTINCT location,
                COUNT(orderID) AS total
  FROM BIT_DB.JanSales
 WHERE location LIKE '%NY%'
 GROUP BY location
HAVING total >= 3 AND 
       length(orderid) = 6 AND 
       orderid <> 'Order ID';

--How many of each type of headphone were sold in February?

SELECT Product,
       sum(Quantity) AS Quanitity
  FROM BIT_DB.FebSales
 WHERE Product LIKE '%headphones%'
 GROUP BY Product;

--What was the average amount spent per account in February? 

SELECT avg(quantity * price) AS average_amount
  FROM BIT_DB.customers cust
       INNER JOIN
       BIT_DB.FebSales Feb ON cust.order_id = Feb.orderID AND 
                              length(orderid) = 6 AND 
                              orderid <> 'Order ID';
                              
--What was the average quantity of products purchased per account in February?

SELECT sum(quantity)/count(cust.acctnum)
  FROM BIT_DB.customers cust 
       INNER JOIN
       BIT_DB.FebSales Feb ON cust.order_id = Feb.orderID AND 
                              length(orderid) = 6 AND 
                              orderid <> 'Order ID';
                              
--Which product brought in the most revenue in January and how much revenue did it bring in total?

SELECT DISTINCT Product,
                sum(quantity * price) AS total_price
  FROM BIT_DB.JanSales
 GROUP BY Product
 ORDER BY total_price DESC
 LIMIT 1;









